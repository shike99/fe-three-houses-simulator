{"version":3,"sources":["components/GrowthRateTable/GrowthRateTable.module.scss","components/Simulator/Simulator.module.scss","components/SelectBox/SelectBox.module.scss","libs/apiClient.ts","models/GrowthRate.ts","models/Character.ts","services/FetchCharacterGrowthRatesService.ts","models/Job.ts","services/FetchJobGrowthRatesService.ts","components/SelectBox/SelectBox.tsx","components/CharacterSelectBox/CharacterSelectBox.tsx","components/JobSelectBox/JobSelectBox.tsx","components/GrowthRateTable/GrowthRateTable.tsx","components/Simulator/Simulator.tsx","hooks/useCharactersAndJobs.ts","libs/serviceWorker.ts","index.tsx"],"names":["module","exports","fetchJson","url","a","fetch","response","json","GrowthRate","hitPoint","strength","magicStrength","skill","agility","luck","defense","magicDefense","charm","characterGrowthRate","jobGrowthRate","SKILL_CORRECTION_VALUE","Character","id","name","englishName","sex","socialPosition","affiliation","growthRate","jobs","filter","job","exclusiveUseOf","includes","genderRestriction","socialPositionRestriction","skillCorrectedGValue","this","FetchCharacterGrowthRatesService","characterGrowthRates","toModel","map","Number","Job","level","FetchJobGrowthRatesService","jobGrowthRates","split","undefined","SelectBox","defaultOption","options","selectedValue","className","handleChange","selectBox","createRef","styles","onChange","current","value","ref","label","option","index","key","CharacterSelectBox","characters","selectedCharacter","selectCharacter","character","toString","find","JobSelectBox","selectedJob","selectJob","extractedJobs","extractTakableJobs","GrowthRateTable","calculate","breakdown","Simulator","useState","setCharacters","setJobs","useEffect","fetchCharacters","call","fetchJobs","Promise","all","useCharactersAndJobs","setSelectedCharacter","setSelectedJob","main","result","title","skillCorrectedGrowthRate","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.38b9a015.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"growthRate\":\"GrowthRateTable_growthRate__TAPpi\",\"breakdown\":\"GrowthRateTable_breakdown__2OklJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Simulator_main__1zKgt\",\"selectBox\":\"Simulator_selectBox__2iiPG\",\"result\":\"Simulator_result__2SccD\",\"title\":\"Simulator_title__1GcD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectBox\":\"SelectBox_selectBox__XJ1S2\"};","export async function fetchJson<T>(url: string): Promise<T> {\n  const response = await fetch(url)\n  return response.json() as Promise<T>\n}\n","export default class GrowthRate {\n  public constructor(\n    readonly hitPoint: number,\n    readonly strength: number,\n    readonly magicStrength: number,\n    readonly skill: number,\n    readonly agility: number,\n    readonly luck: number,\n    readonly defense: number,\n    readonly magicDefense: number,\n    readonly charm: number\n  ) {}\n\n  public static readonly SKILL_CORRECTION_VALUE = 20\n\n  public static calculate(characterGrowthRate: GrowthRate, jobGrowthRate: GrowthRate): GrowthRate {\n    return new GrowthRate(\n      characterGrowthRate.hitPoint + jobGrowthRate.hitPoint,\n      characterGrowthRate.strength + jobGrowthRate.strength,\n      characterGrowthRate.magicStrength + jobGrowthRate.magicStrength,\n      characterGrowthRate.skill + jobGrowthRate.skill,\n      characterGrowthRate.agility + jobGrowthRate.agility,\n      characterGrowthRate.luck + jobGrowthRate.luck,\n      characterGrowthRate.defense + jobGrowthRate.defense,\n      characterGrowthRate.magicDefense + jobGrowthRate.magicDefense,\n      characterGrowthRate.charm + jobGrowthRate.charm\n    )\n  }\n}\n","import { Sex } from '@/types/sex'\nimport { SocialPosition } from '@/types/socialPosition'\nimport { Affiliation } from '@/types/affiliation'\nimport GrowthRate from './GrowthRate'\nimport Job from './Job'\n\nexport default class Character {\n  public constructor(\n    readonly id: number,\n    readonly name: string,\n    readonly englishName: string,\n    readonly sex: Sex,\n    readonly socialPosition: SocialPosition,\n    readonly affiliation: Affiliation,\n    readonly growthRate: GrowthRate\n  ) {}\n\n  get skillCorrectedGrowthRate(): GrowthRate | undefined {\n    const skillCorrectedGValue = GrowthRate.SKILL_CORRECTION_VALUE\n    if (this.englishName === 'cyril') {\n      return new GrowthRate(\n        this.growthRate.hitPoint + skillCorrectedGValue,\n        this.growthRate.strength + skillCorrectedGValue,\n        this.growthRate.magicStrength + skillCorrectedGValue,\n        this.growthRate.skill + skillCorrectedGValue,\n        this.growthRate.agility + skillCorrectedGValue,\n        this.growthRate.luck + skillCorrectedGValue,\n        this.growthRate.defense + skillCorrectedGValue,\n        this.growthRate.magicDefense + skillCorrectedGValue,\n        this.growthRate.charm + skillCorrectedGValue\n      )\n    } else {\n      return undefined\n    }\n  }\n\n  public extractTakableJobs(jobs: Job[]): Job[] {\n    return jobs.filter((job) => {\n      if (job.exclusiveUseOf) {\n        return job.exclusiveUseOf.includes(this.englishName)\n      }\n      if (job.genderRestriction) {\n        return job.genderRestriction === this.sex\n      }\n      if (job.socialPositionRestriction) {\n        return job.socialPositionRestriction === this.socialPosition\n      }\n      return true\n    })\n  }\n}\n","import { fetchJson } from '@/libs/apiClient'\nimport { CharacterApiResponse } from '@/types/apiResponse'\nimport Character from '@/models/Character'\nimport GrowthRate from '@/models/GrowthRate'\n\nexport default class FetchCharacterGrowthRatesService {\n  private constructor() {}\n\n  public static async call(): Promise<Character[]> {\n    const url = 'https://sheetdb.io/api/v1/kqstwgv6uhhj7?sheet=キャラ成長率'\n    const characterGrowthRates = await fetchJson<CharacterApiResponse[]>(url)\n    return this.toModel(characterGrowthRates)\n  }\n\n  private static toModel(characterGrowthRates: CharacterApiResponse[]): Character[] {\n    return characterGrowthRates.map(\n      (characterGrowthRate) =>\n        new Character(\n          Number(characterGrowthRate.id),\n          characterGrowthRate.name,\n          characterGrowthRate.englishName,\n          characterGrowthRate.sex,\n          characterGrowthRate.socialPosition,\n          characterGrowthRate.affiliation,\n          new GrowthRate(\n            Number(characterGrowthRate.hitPoint),\n            Number(characterGrowthRate.strength),\n            Number(characterGrowthRate.magicStrength),\n            Number(characterGrowthRate.skill),\n            Number(characterGrowthRate.agility),\n            Number(characterGrowthRate.luck),\n            Number(characterGrowthRate.defense),\n            Number(characterGrowthRate.magicDefense),\n            Number(characterGrowthRate.charm)\n          )\n        )\n    )\n  }\n}\n","import { JobLevel } from '@/types/job'\nimport { Sex } from '@/types/sex'\nimport { SocialPosition } from '@/types/socialPosition'\nimport GrowthRate from './GrowthRate'\n\nexport default class Job {\n  public constructor(\n    readonly id: number,\n    readonly name: string,\n    readonly level: JobLevel,\n    readonly growthRate: GrowthRate,\n    readonly exclusiveUseOf?: string[],\n    readonly genderRestriction?: Sex,\n    readonly socialPositionRestriction?: SocialPosition\n  ) {}\n}\n","import { fetchJson } from '@/libs/apiClient'\nimport { JobApiResponse } from '@/types/apiResponse'\nimport Job from '@/models/Job'\nimport GrowthRate from '@/models/GrowthRate'\n\nexport default class FetchJobGrowthRatesService {\n  private constructor() {}\n\n  public static async call(): Promise<Job[]> {\n    const url = 'https://sheetdb.io/api/v1/kqstwgv6uhhj7?sheet=兵種成長率'\n    const jobGrowthRates = await fetchJson<JobApiResponse[]>(url)\n    return this.toModel(jobGrowthRates)\n  }\n\n  private static toModel(jobGrowthRates: JobApiResponse[]): Job[] {\n    return jobGrowthRates.map(\n      (jobGrowthRate) =>\n        new Job(\n          Number(jobGrowthRate.id),\n          jobGrowthRate.name,\n          jobGrowthRate.level,\n          new GrowthRate(\n            Number(jobGrowthRate.hitPoint),\n            Number(jobGrowthRate.strength),\n            Number(jobGrowthRate.magicStrength),\n            Number(jobGrowthRate.skill),\n            Number(jobGrowthRate.agility),\n            Number(jobGrowthRate.luck),\n            Number(jobGrowthRate.defense),\n            Number(jobGrowthRate.magicDefense),\n            Number(jobGrowthRate.charm)\n          ),\n          jobGrowthRate.exclusiveUseOf ? jobGrowthRate.exclusiveUseOf.split(',') : undefined,\n          jobGrowthRate.genderRestriction ? jobGrowthRate.genderRestriction : undefined,\n          jobGrowthRate.socialPositionRestriction ? jobGrowthRate.socialPositionRestriction : undefined\n        )\n    )\n  }\n}\n","import React, { createRef, FC } from 'react'\nimport styles from './SelectBox.module.scss'\n\nexport interface SelectBoxOptionType {\n  label: string\n  value: string\n}\n\ninterface PropTypes {\n  defaultOption: SelectBoxOptionType\n  options: SelectBoxOptionType[]\n  selectedValue: SelectBoxOptionType['value']\n  className: string\n  handleChange(value: SelectBoxOptionType['value']): void\n}\n\nconst SelectBox: FC<PropTypes> = ({ defaultOption, options, selectedValue, className, handleChange }) => {\n  const selectBox = createRef<HTMLSelectElement>()\n\n  return (\n    <label className={`${styles.selectBox} ${className}`}>\n      <select onChange={() => handleChange(selectBox.current?.value!)} ref={selectBox} value={selectedValue}>\n        <option value={defaultOption.value}>{defaultOption.label}</option>\n        {options.map((option, index) => (\n          <option key={index} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n      <span />\n    </label>\n  )\n}\n\nexport default SelectBox\n","import React, { FC } from 'react'\nimport Character from '@/models/Character'\nimport SelectBox, { SelectBoxOptionType } from '@/components/SelectBox/SelectBox'\n\ninterface PropTypes {\n  characters: Character[]\n  selectedCharacter: Character | null\n  className: string\n  selectCharacter(character: Character): void\n}\n\nconst CharacterSelectBox: FC<PropTypes> = ({ characters, selectedCharacter, className, selectCharacter }) => {\n  const defaultOption: SelectBoxOptionType = { label: 'キャラクターを選択', value: '0' }\n  const options: SelectBoxOptionType[] = characters.map((character) => ({\n    label: character.name,\n    value: character.id.toString(),\n  }))\n  const selectedValue = selectedCharacter ? selectedCharacter.id.toString() : defaultOption.value\n  const handleChange = (value: string) => {\n    const character = characters.find((character) => character.id === Number(value))\n    selectCharacter(character!)\n  }\n  return (\n    <SelectBox\n      className={className}\n      defaultOption={defaultOption}\n      options={options}\n      selectedValue={selectedValue}\n      handleChange={handleChange}\n    />\n  )\n}\n\nexport default CharacterSelectBox\n","import React, { FC } from 'react'\nimport Character from '@/models/Character'\nimport Job from '@/models/Job'\nimport SelectBox, { SelectBoxOptionType } from '@/components/SelectBox/SelectBox'\n\ninterface PropTypes {\n  character: Character | null\n  jobs: Job[]\n  selectedJob: Job | null\n  className: string\n  selectJob(job: Job): void\n}\n\nconst JobSelectBox: FC<PropTypes> = ({ character, jobs, selectedJob, selectJob, className }) => {\n  const defaultOption: SelectBoxOptionType = { label: '兵種を選択', value: '0' }\n  const extractedJobs = character ? character.extractTakableJobs(jobs) : []\n  const options: SelectBoxOptionType[] = extractedJobs.map((job) => ({\n    label: job.name,\n    value: job.id.toString(),\n  }))\n  const selectedValue = selectedJob ? selectedJob.id.toString() : defaultOption.value\n  const handleChange = (value: string) => {\n    const job = extractedJobs.find((job) => job.id === Number(value))\n    selectJob(job!)\n  }\n  return (\n    <SelectBox\n      className={className}\n      defaultOption={defaultOption}\n      options={options}\n      selectedValue={selectedValue}\n      handleChange={handleChange}\n    />\n  )\n}\n\nexport default JobSelectBox\n","import React, { FC } from 'react'\nimport GrowthRate from '@/models/GrowthRate'\nimport styles from './GrowthRateTable.module.scss'\n\ninterface PropTypes {\n  characterGrowthRate: GrowthRate\n  jobGrowthRate: GrowthRate\n}\n\nconst GrowthRateTable: FC<PropTypes> = ({ characterGrowthRate, jobGrowthRate }) => {\n  const growthRate = GrowthRate.calculate(characterGrowthRate, jobGrowthRate)\n\n  return (\n    <ul className={styles.growthRate}>\n      <li>\n        <dt>HP</dt>\n        <dd>\n          <span>{growthRate.hitPoint}</span>\n          <span className={styles.breakdown}>\n            ({characterGrowthRate.hitPoint} + {jobGrowthRate.hitPoint})\n          </span>\n        </dd>\n      </li>\n      <li>\n        <dt>力</dt>\n        <dd>\n          <span>{growthRate.strength}</span>\n          <span className={styles.breakdown}>\n            ({characterGrowthRate.strength} + {jobGrowthRate.strength})\n          </span>\n        </dd>\n      </li>\n      <li>\n        <dt>魔力</dt>\n        <dd>\n          <span>{growthRate.magicStrength}</span>\n          <span className={styles.breakdown}>\n            ({characterGrowthRate.magicStrength} + {jobGrowthRate.magicStrength})\n          </span>\n        </dd>\n      </li>\n      <li>\n        <dt>技</dt>\n        <dd>\n          <span>{growthRate.skill}</span>\n          <span className={styles.breakdown}>\n            ({characterGrowthRate.skill} + {jobGrowthRate.skill})\n          </span>\n        </dd>\n      </li>\n      <li>\n        <dt>速さ</dt>\n        <dd>\n          <span>{growthRate.agility}</span>\n          <span className={styles.breakdown}>\n            ({characterGrowthRate.agility} + {jobGrowthRate.agility})\n          </span>\n        </dd>\n      </li>\n      <li>\n        <dt>幸運</dt>\n        <dd>\n          <span>{growthRate.luck}</span>\n          <span className={styles.breakdown}>\n            ({characterGrowthRate.luck} + {jobGrowthRate.luck})\n          </span>\n        </dd>\n      </li>\n      <li>\n        <dt>守備</dt>\n        <dd>\n          <span>{growthRate.defense}</span>\n          <span className={styles.breakdown}>\n            ({characterGrowthRate.defense} + {jobGrowthRate.defense})\n          </span>\n        </dd>\n      </li>\n      <li>\n        <dt>魔防</dt>\n        <dd>\n          <span>{growthRate.magicDefense}</span>\n          <span className={styles.breakdown}>\n            ({characterGrowthRate.magicDefense} + {jobGrowthRate.magicDefense})\n          </span>\n        </dd>\n      </li>\n      <li>\n        <dt>魅力</dt>\n        <dd>\n          <span>{growthRate.charm}</span>\n          <span className={styles.breakdown}>\n            ({characterGrowthRate.charm} + {jobGrowthRate.charm})\n          </span>\n        </dd>\n      </li>\n    </ul>\n  )\n}\n\nexport default GrowthRateTable\n","import React, { useState } from 'react'\nimport Character from '@/models/Character'\nimport Job from '@/models/Job'\nimport { useCharactersAndJobs } from '@/hooks/useCharactersAndJobs'\nimport CharacterSelectBox from '@/components/CharacterSelectBox/CharacterSelectBox'\nimport JobSelectBox from '@/components/JobSelectBox/JobSelectBox'\nimport GrowthRateTable from '@/components/GrowthRateTable/GrowthRateTable'\nimport styles from './Simulator.module.scss'\n\nfunction Simulator() {\n  const { characters, jobs } = useCharactersAndJobs()\n\n  const [selectedCharacter, setSelectedCharacter] = useState<Character | null>(null)\n  const [selectedJob, setSelectedJob] = useState<Job | null>(null)\n  const selectCharacter = (character: Character) => {\n    setSelectedJob(null)\n    setSelectedCharacter(character)\n  }\n  const selectJob = (job: Job) => setSelectedJob(job)\n\n  return (\n    <main className={styles.main}>\n      <CharacterSelectBox\n        className={styles.selectBox}\n        characters={characters}\n        selectedCharacter={selectedCharacter}\n        selectCharacter={selectCharacter}\n      />\n      <JobSelectBox\n        className={styles.selectBox}\n        character={selectedCharacter}\n        jobs={jobs}\n        selectedJob={selectedJob}\n        selectJob={selectJob}\n      />\n      {selectedCharacter && selectedJob && (\n        <section className={styles.result}>\n          <h2 className={styles.title}>\n            {selectedCharacter.name} - {selectedJob.name}\n          </h2>\n          <GrowthRateTable characterGrowthRate={selectedCharacter.growthRate} jobGrowthRate={selectedJob.growthRate} />\n          {selectedCharacter.skillCorrectedGrowthRate && (\n            <GrowthRateTable\n              characterGrowthRate={selectedCharacter.skillCorrectedGrowthRate}\n              jobGrowthRate={selectedJob.growthRate}\n            />\n          )}\n        </section>\n      )}\n    </main>\n  )\n}\n\nexport default Simulator\n","import { useState, useEffect } from 'react'\nimport FetchCharacterGrowthRatesService from '@/services/FetchCharacterGrowthRatesService'\nimport FetchJobGrowthRatesService from '@/services/FetchJobGrowthRatesService'\nimport Character from '@/models/Character'\nimport Job from '@/models/Job'\n\nexport function useCharactersAndJobs(): { characters: Character[]; jobs: Job[] } {\n  const [characters, setCharacters] = useState<Character[]>([])\n  const [jobs, setJobs] = useState<Job[]>([])\n\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      const characters = await FetchCharacterGrowthRatesService.call()\n      setCharacters(characters)\n    }\n    const fetchJobs = async () => {\n      const jobs = await FetchJobGrowthRatesService.call()\n      setJobs(jobs)\n    }\n    Promise.all([fetchCharacters(), fetchJobs()])\n  }, [])\n\n  return { characters, jobs }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport Simulator from './components/Simulator/Simulator'\nimport * as serviceWorker from './libs/serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Simulator />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}